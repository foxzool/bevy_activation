on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]

name: CI

env:
  CARGO_TERM_COLOR: always

jobs:
  fmt:
    name: Formatter check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt
      - run: cargo fmt --all -- --check

  clippy:
    name: Clippy check
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: cache-${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.toml') }}
          restore-keys: |
            cache-${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.toml') }}
            cache-${{ runner.os }}-cargo
      - name: Install dependencies
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install --no-install-recommends libasound2-dev libudev-dev libxcb-render0-dev libxcb-shape0-dev libxcb-xfixes0-dev libwayland-dev libxkbcommon-dev libvulkan-dev
      - run: cargo clippy --all-targets --all-features -- -D warnings

  clippy_wasm32:
    name: Clippy check (wasm32)
    runs-on: ubuntu-latest
    env:
      RUSTFLAGS: --cfg=web_sys_unstable_apis
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy
          targets: wasm32-unknown-unknown
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: cache-wasm32-cargo-${{ hashFiles('**/Cargo.toml') }}
          restore-keys: |
            cache-wasm32-cargo-${{ hashFiles('**/Cargo.toml') }}
            cache-wasm32-cargo
      - run: cargo clippy --target=wasm32-unknown-unknown --all-targets --all-features -- -D warnings
        continue-on-error: true

  doc:
    name: Check documentation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: cache-doc-cargo-${{ hashFiles('**/Cargo.toml') }}
          restore-keys: |
            cache-doc-cargo-${{ hashFiles('**/Cargo.toml') }}
            cache-doc-cargo
      - run: cargo doc --all --no-deps --all-features
        env:
          RUSTDOCFLAGS: -D warnings

  test:
    name: Run tests
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
        rust: [ stable, beta ]
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: cache-test-${{ runner.os }}-${{ matrix.rust }}-cargo-${{ hashFiles('**/Cargo.toml') }}
          restore-keys: |
            cache-test-${{ runner.os }}-${{ matrix.rust }}-cargo-${{ hashFiles('**/Cargo.toml') }}
            cache-test-${{ runner.os }}-${{ matrix.rust }}-cargo
      - name: Install dependencies
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install --no-install-recommends libasound2-dev libudev-dev libxcb-render0-dev libxcb-shape0-dev libxcb-xfixes0-dev libwayland-dev libxkbcommon-dev libvulkan-dev
      - run: cargo test --all --all-features

  # Check that we can build with minimal features
  test_minimal:
    name: Test minimal features
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: cache-minimal-cargo-${{ hashFiles('**/Cargo.toml') }}
          restore-keys: |
            cache-minimal-cargo-${{ hashFiles('**/Cargo.toml') }}
            cache-minimal-cargo
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install --no-install-recommends libasound2-dev libudev-dev libxcb-render0-dev libxcb-shape0-dev libxcb-xfixes0-dev libwayland-dev libxkbcommon-dev libvulkan-dev
      - run: cargo test --no-default-features